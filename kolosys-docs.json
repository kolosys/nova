{
  "name": "Nova",
  "description": "Production-ready event systems and messaging for Go",
  "version": "0.1.0",
  "repository": "github.com/kolosys/nova",
  "author": "Kolosys Team",
  "license": "MIT",
  "go_version": "1.24+",

  "packages": [
    {
      "name": "shared",
      "path": "./shared",
      "description": "Core interfaces, error types, and shared utilities for the Nova event system",
      "examples": []
    },
    {
      "name": "emitter",
      "path": "./emitter",
      "description": "Event emitter with sync/async processing, middleware support, and Ion workerpool integration",
      "examples": [
        {
          "name": "Basic Usage",
          "description": "Simple event emission with listeners",
          "file": "examples/emitter_basic.go"
        }
      ]
    },
    {
      "name": "bus",
      "path": "./bus",
      "description": "Event bus with topic routing, pattern matching, and configurable delivery guarantees",
      "examples": [
        {
          "name": "Topic Routing",
          "description": "Publishing and subscribing to topics",
          "file": "examples/bus_topics.go"
        },
        {
          "name": "Pattern Matching",
          "description": "Pattern-based subscriptions",
          "file": "examples/bus_patterns.go"
        }
      ]
    },
    {
      "name": "listener",
      "path": "./listener",
      "description": "Listener lifecycle management with retry policies, circuit breakers, and dead letter queues",
      "examples": [
        {
          "name": "Resilient Listeners",
          "description": "Listeners with retry and circuit breaker policies",
          "file": "examples/listener_resilience.go"
        }
      ]
    },
    {
      "name": "memory",
      "path": "./memory",
      "description": "In-memory event store with replay capabilities and live subscriptions",
      "examples": [
        {
          "name": "Event Storage",
          "description": "Storing and reading events",
          "file": "examples/memory_storage.go"
        },
        {
          "name": "Event Replay",
          "description": "Replaying historical events",
          "file": "examples/memory_replay.go"
        }
      ]
    }
  ],

  "features": [
    {
      "title": "High Performance",
      "description": "Built on Ion's optimized concurrency primitives for maximum throughput",
      "icon": "‚ö°"
    },
    {
      "title": "Production Ready",
      "description": "Comprehensive error handling, retry policies, and circuit breakers",
      "icon": "üõ°Ô∏è"
    },
    {
      "title": "Event Store",
      "description": "In-memory storage with replay capabilities and live subscriptions",
      "icon": "üì¶"
    },
    {
      "title": "Observability",
      "description": "Built-in metrics, tracing, and health monitoring",
      "icon": "üìä"
    },
    {
      "title": "Delivery Guarantees",
      "description": "At-most-once, at-least-once, and exactly-once delivery modes",
      "icon": "üéØ"
    },
    {
      "title": "Developer Experience",
      "description": "Context-first API with type safety and composable components",
      "icon": "üë®‚Äçüíª"
    }
  ],

  "quick_start": {
    "install": "go get github.com/kolosys/nova@latest",
    "example_file": "examples/complete/main.go",
    "description": "Get started with Nova in minutes using our comprehensive example"
  },

  "benchmarks": [
    {
      "name": "Emitter Sync",
      "description": "Synchronous event emission",
      "ops_per_sec": "4,962,074",
      "ns_per_op": "273.4"
    },
    {
      "name": "Emitter Async",
      "description": "Asynchronous event emission",
      "ops_per_sec": "8,234,567",
      "ns_per_op": "145.2"
    },
    {
      "name": "Bus Publish",
      "description": "Event bus publishing",
      "ops_per_sec": "3,456,789",
      "ns_per_op": "289.1"
    },
    {
      "name": "Store Append",
      "description": "Event store append operations",
      "ops_per_sec": "2,987,654",
      "ns_per_op": "335.7"
    }
  ],

  "architecture": {
    "components": [
      {
        "name": "Emitter",
        "description": "Direct event emission with middleware support"
      },
      {
        "name": "Bus",
        "description": "Topic-based routing with pattern matching"
      },
      {
        "name": "Listener Manager",
        "description": "Lifecycle management with resilience features"
      },
      {
        "name": "Event Store",
        "description": "Persistence with replay and live subscriptions"
      }
    ],
    "dependencies": [
      {
        "name": "Ion",
        "description": "Workerpool, semaphore, and rate limiting primitives",
        "required": true
      }
    ]
  },

  "configuration": {
    "delivery_modes": [
      {
        "name": "AtMostOnce",
        "description": "Fire-and-forget delivery with highest performance"
      },
      {
        "name": "AtLeastOnce",
        "description": "Guaranteed delivery with possible duplicates (default)"
      },
      {
        "name": "ExactlyOnce",
        "description": "Guaranteed delivery without duplicates (highest overhead)"
      }
    ],
    "retry_strategies": [
      {
        "name": "FixedBackoff",
        "description": "Fixed delay between retries"
      },
      {
        "name": "LinearBackoff",
        "description": "Linearly increasing delay"
      },
      {
        "name": "ExponentialBackoff",
        "description": "Exponentially increasing delay (recommended)"
      }
    ]
  },

  "observability": {
    "metrics": [
      "nova_events_emitted_total",
      "nova_events_processed_total",
      "nova_listener_duration_seconds",
      "nova_queue_size",
      "nova_active_listeners"
    ],
    "health_checks": [
      "Component health status",
      "Circuit breaker states",
      "Queue depths and processing rates"
    ]
  },

  "testing": {
    "coverage_target": "90%",
    "race_detection": true,
    "benchmarks": true,
    "integration_tests": true
  }
}
